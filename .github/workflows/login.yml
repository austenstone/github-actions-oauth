name: Login

on:
  workflow_dispatch:
    inputs:
      code:
        description: 'Temporary GitHub code from App authorization'
        required: true

jobs:
  login:
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.login-script.outputs.result }}
    steps:
      - name: Login
        uses: actions/github-script@v6
        id: login-script
        env:
          code: ${{ inputs.code }}
          client_id: ${{ secrets.CLIENT_ID }}
          client_secret: ${{ secrets.CLIENT_SECRET }}
        with:
          result-encoding: string
          script: |
            const { code, client_id, client_secret } = process.env;
            const response = await fetch("https://github.com/login/oauth/access_token", {
              method: "POST",
              headers: {
                "content-type": "application/json",
                accept: "application/json",
              },
              body: JSON.stringify({
                client_id,
                client_secret,
                code
              }),
            });
            result = await response.json();
            const token = result.access_token
            if (!token) core.setFailed(result.error_description);
            return token;
      - name: Result
        run: echo ${{ steps.login-script.outputs.result }}